{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/mapbox/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl';\n\nconst App = () => {\n  const [logEntries, setLogEntries] = useState([]); // const [showPopup, setShowPopup] = useState({});\n  // const [addEntryLocation, setAddEntryLocation] = useState(null);\n\n  const [curPos, setCur] = useState({});\n  const [viewport, setViewport] = useState({\n    width: '100vw',\n    height: '80vh',\n    latitude: 10.6,\n    longitude: 106,\n    zoom: 7\n  });\n\n  const getEntries = async () => {\n    const logEntries = [{\n      id: 1,\n      latitude: 10.7781128,\n      longitude: 106.6532558\n    }];\n    setLogEntries(logEntries);\n  };\n\n  const getPosition1 = async () => {\n    var getPosition = function (options) {\n      return new Promise(function (resolve, reject) {\n        navigator.geolocation.getCurrentPosition(resolve, reject, options);\n      });\n    };\n\n    const position = await getPosition();\n    console.log(posiiton); // getPosition()\n    //   .then((position) => {\n    //    // 10.7781128,106.6532558\n    //     this.setState({\n    //       lng: 10.7781128.toFixed(4),\n    //       lat: 106.6532558.toFixed(4),\n    //       zoom: 12\n    //     });\n    //     console.log(\"dfdff\")\n    //   })\n    //   .catch((err) => {\n    //     console.error(err.message);\n    //   });\n  };\n\n  useEffect(() => {\n    getPosition1();\n  }, []); // const showAddMarkerPopup = (event) => {\n  //   const [ longitude, latitude ] = event.lngLat;\n  //   setAddEntryLocation({\n  //     latitude,\n  //     longitude,\n  //   });\n  // };\n\n  return /*#__PURE__*/React.createElement(ReactMapGL, Object.assign({}, viewport, {\n    mapStyle: \"mapbox://styles/thecjreynolds/ck117fnjy0ff61cnsclwimyay\",\n    mapboxApiAccessToken: 'pk.eyJ1IjoiemF5dHNldjUiLCJhIjoiY2tjaWk4cnc2MGtiMDJxazJwMGllOThlNyJ9.HciILC1tn3zdsXCuvzdRog',\n    onViewportChange: setViewport // onDblClick={showAddMarkerPopup}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }), logEntries.map(entry => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: entry.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Marker, {\n    latitude: entry.latitude,\n    longitude: entry.longitude,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => {\n      console.log(\"You have clicked...\");\n    } // onClick={() => setShowPopup({\n    //   // ...showPopup,\n    //   [entry._id]: true,\n    // })}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    className: \"marker white\",\n    style: {\n      height: `${3 * viewport.zoom}px`,\n      width: `${3 * viewport.zoom}px`,\n      color: 'white'\n    },\n    version: \"1.1\",\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M256,0C153.755,0,70.573,83.182,70.573,185.426c0,126.888,165.939,313.167,173.004,321.035 c6.636,7.391,18.222,7.378,24.846,0c7.065-7.868,173.004-194.147,173.004-321.035C441.425,83.182,358.244,0,256,0z M256,278.719 c-51.442,0-93.292-41.851-93.292-93.293S204.559,92.134,256,92.134s93.291,41.851,93.291,93.293S307.441,278.719,256,278.719z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 23\n    }\n  })))))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/apple/Desktop/mapbox/src/App.js"],"names":["React","useState","useEffect","ReactMapGL","Marker","Popup","App","logEntries","setLogEntries","curPos","setCur","viewport","setViewport","width","height","latitude","longitude","zoom","getEntries","id","getPosition1","getPosition","options","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","console","log","posiiton","map","entry","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl';\n\n\n\nconst App = () => {\n  const [logEntries, setLogEntries] = useState([]);\n  // const [showPopup, setShowPopup] = useState({});\n  // const [addEntryLocation, setAddEntryLocation] = useState(null);\n  const [curPos, setCur] = useState({})\n  const [viewport, setViewport] = useState({\n    width: '100vw',\n    height: '80vh',\n    latitude: 10.6,\n    longitude: 106,\n    zoom: 7\n  });\n\n  \n  const getEntries = async () => {\n    const logEntries = [\n      {\n        id:1,\n        latitude:10.7781128,\n        longitude:106.6532558\n      }\n    ]\n    setLogEntries(logEntries);\n  };\n\n  const getPosition1 = async() =>{\n    var getPosition = function (options) {\n      return new Promise(function (resolve, reject) {\n        navigator.geolocation.getCurrentPosition(resolve, reject, options);\n      });\n    }\n    const position = await getPosition();\n    console.log(posiiton);\n    // getPosition()\n    //   .then((position) => {\n    //    // 10.7781128,106.6532558\n    //     this.setState({\n    //       lng: 10.7781128.toFixed(4),\n    //       lat: 106.6532558.toFixed(4),\n    //       zoom: 12\n    //     });\n    //     console.log(\"dfdff\")\n        \n    //   })\n    //   .catch((err) => {\n    //     console.error(err.message);\n    //   });\n  }\n\n  useEffect( () => {\n   getPosition1()\n  }, []);\n\n  // const showAddMarkerPopup = (event) => {\n  //   const [ longitude, latitude ] = event.lngLat;\n  //   setAddEntryLocation({\n  //     latitude,\n  //     longitude,\n  //   });\n  // };\n\n  return (\n    <ReactMapGL\n      {...viewport}\n      mapStyle=\"mapbox://styles/thecjreynolds/ck117fnjy0ff61cnsclwimyay\"\n      mapboxApiAccessToken={'pk.eyJ1IjoiemF5dHNldjUiLCJhIjoiY2tjaWk4cnc2MGtiMDJxazJwMGllOThlNyJ9.HciILC1tn3zdsXCuvzdRog'}\n      onViewportChange={setViewport}\n     // onDblClick={showAddMarkerPopup}\n    >\n      {\n        logEntries.map(entry => (\n          <React.Fragment key={entry.id}>\n            <Marker\n              latitude={entry.latitude}\n              longitude={entry.longitude}\n            >\n              <div\n              onClick = {() =>{\n                console.log(\"You have clicked...\");\n              }}\n                // onClick={() => setShowPopup({\n                //   // ...showPopup,\n                //   [entry._id]: true,\n                // })}\n              >\n                <svg\n                  className=\"marker white\"\n                  style={{\n                    height: `${3 * viewport.zoom}px`,\n                    width: `${3 * viewport.zoom}px`,\n                    color:'white'\n                  }}\n                  version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\">\n                  <g>\n                    <g>\n                      <path d=\"M256,0C153.755,0,70.573,83.182,70.573,185.426c0,126.888,165.939,313.167,173.004,321.035\n                        c6.636,7.391,18.222,7.378,24.846,0c7.065-7.868,173.004-194.147,173.004-321.035C441.425,83.182,358.244,0,256,0z M256,278.719\n                        c-51.442,0-93.292-41.851-93.292-93.293S204.559,92.134,256,92.134s93.291,41.851,93.291,93.293S307.441,278.719,256,278.719z\"/>\n                    </g>\n                  </g>\n                </svg>\n              </div>\n            </Marker>\n            {/* {\n              showPopup[entry._id] ? (\n                <Popup\n                  latitude={entry.latitude}\n                  longitude={entry.longitude}\n                  closeButton={true}\n                  closeOnClick={false}\n                  dynamicPosition={true}\n                  onClose={() => setShowPopup({})}\n                  anchor=\"top\" >\n                  <div className=\"popup\">\n                    <h3>{entry.title}</h3>\n                    <p>{entry.comments}</p>\n                    <small>Visited on: {new Date(entry.visitDate).toLocaleDateString()}</small>\n                    {entry.image && <img src={entry.image} alt={entry.title} />}\n                  </div>\n                </Popup>\n              ) : null\n            } */}\n          </React.Fragment>\n        ))\n      }\n      {/* {\n        addEntryLocation ? (\n          <>\n          <Marker\n            latitude={addEntryLocation.latitude}\n            longitude={addEntryLocation.longitude}\n          >\n            <div>\n              <svg\n                className=\"marker red\"\n                style={{\n                  height: `${6 * viewport.zoom}px`,\n                  width: `${6 * viewport.zoom}px`,\n                }}\n                version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\">\n                <g>\n                  <g>\n                    <path d=\"M256,0C153.755,0,70.573,83.182,70.573,185.426c0,126.888,165.939,313.167,173.004,321.035\n                      c6.636,7.391,18.222,7.378,24.846,0c7.065-7.868,173.004-194.147,173.004-321.035C441.425,83.182,358.244,0,256,0z M256,278.719\n                      c-51.442,0-93.292-41.851-93.292-93.293S204.559,92.134,256,92.134s93.291,41.851,93.291,93.293S307.441,278.719,256,278.719z\"/>\n                  </g>\n                </g>\n              </svg>\n            </div>\n          </Marker>\n          <Popup\n            latitude={addEntryLocation.latitude}\n            longitude={addEntryLocation.longitude}\n            closeButton={true}\n            closeOnClick={false}\n            dynamicPosition={true}\n            onClose={() => setAddEntryLocation(null)}\n            anchor=\"top\" >\n            <div className=\"popup\">\n              <LogEntryForm onClose={() => {\n                setAddEntryLocation(null);\n                getEntries();\n              }} location={addEntryLocation} />\n            </div>\n          </Popup>\n          </>\n        ) : null\n      } */}\n    </ReactMapGL>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}