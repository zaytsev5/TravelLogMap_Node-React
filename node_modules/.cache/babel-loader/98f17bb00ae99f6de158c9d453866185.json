{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Dropbox/My Mac (zaytsev.local)/Documents/mapbox/src/Mapbox.js\";\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl';\nimport { showAuthWindow } from './actions/userActions';\nimport { BrowserRouter as Router, Switch, Route, Link, useParams } from \"react-router-dom\";\nimport ImageView from './components/ImageView';\nimport AddBox from './components/AddBox';\nimport User from './components/User';\nimport Processing from './components/Processing';\nimport Direction from './components/Direction';\nimport Clock from './components/Clock';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { userLogin, userLogout } from './actions/userActions';\n\nconst Mapbox = props => {\n  const [text, setText] = useState(\"\");\n  const [info, setInfo] = useState(0);\n  const getInfo = useCallback(() => {\n    setInfo(i => i + 1);\n  }, [setInfo]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    style: {\n      width: '95%',\n      height: '35px',\n      fontSize: '14px',\n      marginTop: '5px'\n    },\n    placeholder: \"enter some your review..\",\n    type: \"text\",\n    rows: \"5\",\n    value: text,\n    onChange: e => setText(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(ImageView, {\n    info: getInfo,\n    val: info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  })); // let { id } = useParams()\n  // const [logEntries, setLogEntries] = useState([]);\n  // const [showPopup, setShowPopup] = useState({});\n  // const [isShown, setShow] = useState(id ? parseInt(id) : 0)\n  // const [isAdd, setAdd] = useState(false)\n  // const [point, setPoint] = useState(false)\n  // const [pos, setPos] = useState({})\n  // const [user, setUser] = useState(false)\n  // const [load, setLoad] = useState(false)\n  // const [logged, setLogged] = useState({})\n  // const [hint, setHint] = useState(false)\n  // const [viewport, setViewport] = useState({\n  //   width: '100vw',\n  //   height: '100vh',\n  //   latitude: 10.7781128,\n  //   longitude: 106.65325,\n  //   zoom: 12\n  // });\n  // const getLocation = () => {\n  //   if (navigator.geolocation) {\n  //     navigator.geolocation.getCurrentPosition(showPosition);\n  //   } else {\n  //     alert(\"Geolocation is not supported by this browser.\")\n  //   }\n  // }\n  // const showPosition = (position) => {\n  //   setViewport({\n  //     width: '100vw',\n  //     height: '100vh',\n  //     latitude: position.coords.latitude,\n  //     longitude: position.coords.longitude,\n  //     zoom: 12\n  //   })\n  // }\n  // const getUser = () => {\n  //   console.log(\"in getUser()\");\n  //   fetch(\"http://localhost:3000/auth/login/success\", {\n  //     method: \"GET\",\n  //     credentials: \"include\",\n  //     headers: {\n  //       Accept: \"application/json\",\n  //       \"Content-Type\": \"application/json\",\n  //       \"Access-Control-Allow-Credentials\": true\n  //     }\n  //   })\n  //     .then(response => {\n  //       console.log(\"in then1\");\n  //       getEntries()\n  //       if (response.status === 200) return response.json();\n  //       throw new Error(\"failed to authenticate user\");\n  //     })\n  //     .then(responseJson => {\n  //       setLogged(responseJson.user)\n  //       setUser(true)\n  //     })\n  //     .catch(error => {\n  //       setLogged(false)\n  //     });\n  // }\n  // const getEntries = async () => {\n  //   const response = await fetch('http://localhost:3000/api/logs')\n  //   const result = await response.json()\n  //   // setLogEntries(result)\n  //   console.log(result);\n  //   setLogEntries(result);\n  //   setLoad(true)\n  //   //setUser(result)\n  // };\n  // useEffect(() => {\n  //   if (window.location.hash === \"#_=_\") {\n  //     window.history.replaceState\n  //       ? window.history.replaceState(null, null, window.location.href.split(\"#\")[0])\n  //       : window.location.hash = \"\";\n  //   }\n  //   // getUser()\n  //   props.userLogin()\n  //   getEntries()\n  //   setUser(true)\n  //   // console.log(props.user_info);\n  // }, []);\n  // const onClick = (e) => {\n  //   const newVewport = {\n  //     ...viewport,\n  //     latitude: e.lngLat[1],\n  //     longitude: e.lngLat[0]\n  //   };\n  //   setPos({ lng: e.lngLat[0], lat: e.lngLat[1] })\n  //   console.log(isAdd);\n  //   if (isAdd) setPoint(true)\n  //   setViewport(newVewport);\n  // };\n  // const onDblClick = e => {\n  //   console.log('A click event has occurred at ' + e.lngLat[0]);\n  // };\n  // const PlusIcon = ({ handleClick, value }) => {\n  //   const divStyle = {\n  //     position: 'absolute',\n  //     margin: '15px 15px',\n  //     zIndex: '500',\n  //   }\n  //   const divStyle1 = {\n  //     position: 'absolute',\n  //     margin: '10px 15px',\n  //     zIndex: '500',\n  //     animation: 'App-logo-spin 0s',\n  //     animationFillMode: 'forwards',\n  //   }\n  //   return (\n  //     <div style={value ? divStyle1 : divStyle} onClick={() => handleClick(!value)}>\n  //       <svg\n  //         className=\"marker white\"\n  //         style={{\n  //           height: `${3 * 12}px`,\n  //           width: `${3 * 12}px`,\n  //         }}\n  //         version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\">\n  //         <g>\n  //           <g>\n  //             <path style={{ fill: 'white' }} d=\"m272 184c-4.417969 0-8-3.582031-8-8v-176h-80v176c0 4.417969-3.582031 8-8 8h-176v80h176c4.417969 0 8 3.582031 8 8v176h80v-176c0-4.417969 3.582031-8 8-8h176v-80zm0 0\" />\n  //           </g>\n  //         </g>\n  //       </svg>\n  //     </div>\n  //   )\n  // }\n  // const Point = ({ pos }) => {\n  //   return (\n  //     <div\n  //       style={{\n  //         position: 'absolute',\n  //         padding: '2px 7px',\n  //         height: '15px',\n  //         lineHeight: '15px',\n  //         borderRadius: '3px',\n  //         backgroundColor: 'white',\n  //         color: 'black',\n  //         top: '2%',\n  //         left: '5%',\n  //       }}>\n  //       {pos.lng.toFixed(6)} - {pos.lat.toFixed(6)}\n  //     </div>\n  //   )\n  // }\n  // return (\n  //   <ReactMapGL\n  //     mapStyle=\"mapbox://styles/thecjreynolds/ck117fnjy0ff61cnsclwimyay\"\n  //     mapboxApiAccessToken={'pk.eyJ1IjoiemF5dHNldjUiLCJhIjoiY2tjaWk4cnc2MGtiMDJxazJwMGllOThlNyJ9.HciILC1tn3zdsXCuvzdRog'}\n  //     onViewportChange={setViewport}\n  //     doubleClickZoom={false}\n  //     onDblClick={onClick}\n  //     scrollZoom={isShown ? false : true}\n  //     onClick={(e) => onDblClick(e)}\n  //     {...viewport}\n  //   >\n  //     <>\n  //       <PlusIcon handleClick={(val) => setAdd(val)} value={isAdd} />\n  //       {\n  //         isAdd && <AddBox reload={() => getEntries()} logged={Object.keys(props.user_info).length > 0 ? true : false} name={props.user_info.displayName} />\n  //       }\n  //     </>\n  //     <>\n  //       {\n  //         point && <Point pos={pos} />\n  //       }\n  //     </>\n  //     {\n  //       !load && <Processing />\n  //     }\n  //     {\n  //       logEntries.map(entry => (\n  //         <React.Fragment key={entry.id}>\n  //           <Marker\n  //             latitude={entry.latitude}\n  //             longitude={entry.longitude}\n  //           >\n  //             <div\n  //               onClick={() => setShowPopup(entry.id)}\n  //               style={{\n  //                 cursor: 'pointer'\n  //               }}\n  //             >\n  //               <svg\n  //                 className=\"marker white\"\n  //                 style={{\n  //                   height: `${3 * viewport.zoom}px`,\n  //                   width: `${3 * viewport.zoom}px`,\n  //                   cursor: 'pointer'\n  //                 }}\n  //                 version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\">\n  //                 <g>\n  //                   <g>\n  //                     <path style={{ fill: 'white' }} d=\"M184.08,0c-74.992,0-136,61.008-136,136c0,24.688,11.072,51.24,11.536,52.36c3.576,8.488,10.632,21.672,15.72,29.4\n  //                       l93.248,141.288c3.816,5.792,9.464,9.112,15.496,9.112s11.68-3.32,15.496-9.104l93.256-141.296\n  //                       c5.096-7.728,12.144-20.912,15.72-29.4c0.464-1.112,11.528-27.664,11.528-52.36C320.08,61.008,259.072,0,184.08,0z\n  //                       M293.8,182.152c-3.192,7.608-9.76,19.872-14.328,26.8l-93.256,141.296c-1.84,2.792-2.424,2.792-4.264,0L88.696,208.952\n  //                       c-4.568-6.928-11.136-19.2-14.328-26.808C74.232,181.816,64.08,157.376,64.08,136c0-66.168,53.832-120,120-120\n  //                       c66.168,0,120,53.832,120,120C304.08,157.408,293.904,181.912,293.8,182.152z\"/>\n  //                     <path style={{ fill: 'white' }} d=\"M184.08,64.008c-39.704,0-72,32.304-72,72c0,39.696,32.296,72,72,72c39.704,0,72-32.304,72-72\n  //                       C256.08,96.312,223.784,64.008,184.08,64.008z M184.08,192.008c-30.872,0-56-25.12-56-56s25.128-56,56-56s56,25.12,56,56\n  //                       S214.952,192.008,184.08,192.008z\"/>\n  //                   </g>\n  //                 </g>\n  //               </svg>\n  //             </div>\n  //           </Marker>\n  //           {\n  //             showPopup == entry.id ? (\n  //               <Popup\n  //                 className=\"mu-popup\"\n  //                 latitude={entry.latitude}\n  //                 longitude={entry.longitude}\n  //                 closeButton={true}\n  //                 closeOnClick={false}\n  //                 dynamicPosition={true}\n  //                 onClose={() => setShowPopup({})}\n  //                 anchor=\"top\" >\n  //                 <div className=\"asdsa-apopup\" style={{ width: '210px', fontSize: '12px', zIndex: '99', position: 'relative', zIndex: '300' }}>\n  //                   <h2>{entry.title}</h2>\n  //                   <p><strong style={{ fontSize: '15px' }}>{entry.comments}</strong></p>\n  //                   <p><strong>Author</strong> - {entry.author}</p>\n  //                   <p><strong>Visited on:</strong> {new Date(entry.visitDate).toLocaleDateString()}</p>\n  //                   {\n  //                     entry.image &&\n  //                     <Router>\n  //                       <Link to={`/log/${entry.id}`}>\n  //                         <p onClick={() => setShow(entry.id)}><img\n  //                           src={entry.image}\n  //                           alt={entry.title}\n  //                           width='210px' height='100px'\n  //                           title=\"Zoom in\"\n  //                         />\n  //                         </p>\n  //                       </Link>\n  //                     </Router>\n  //                   }\n  //                   {entry.image &&\n  //                     <Router>\n  //                       <Link to={`${entry.id}`}>\n  //                       </Link>\n  //                     </Router>\n  //                   }\n  //                 </div>\n  //               </Popup>\n  //             ) : null\n  //           }\n  //           {\n  //             isShown == entry.id ? (\n  //               <ImageView\n  //                 src={entry.image}\n  //                 id={entry.id}\n  //                 uid={props.user_info.id || ''}\n  //                 name={props.user_info.displayName || ''}\n  //                 log={entry}\n  //                 offShow={(val) => setShow(val)}\n  //                 url={Object.keys(props.user_info).length > 0 ? props.user_info.photos[0].value : ''} />\n  //             ) : null\n  //           }\n  //           { Object.keys(props.user_info).length > 0 ? <User url={props.user_info.photos[0].value} userName={props.user_info.displayName} /> :\n  //             <div className=\"login\">\n  //               < div\n  //                 href='http://localhost:3000/auth/facebook'\n  //                 style={{\n  //                   position: 'absolute',\n  //                   padding: '5px 10px',\n  //                   lineHeight: '25px',\n  //                   borderRadius: '3px',\n  //                   backgroundColor: 'white',\n  //                   color: 'black',\n  //                   bottom: '5%',\n  //                   left: '5%',\n  //                   textDecoration: 'none',\n  //                   color: '#4267b2',\n  //                   fontWeight: '700'\n  //                 }}\n  //                 onClick={() => {\n  //                   showAuthWindow({\n  //                     path: \"http://localhost:3000/auth/facebook\",\n  //                     callback: function () {\n  //                       window.location.reload()\n  //                     }\n  //                   })\n  //                 }}\n  //               >Login with facebook</div>\n  //             </div>\n  //           }\n  //           <div onClick={() => setHint(true)} >\n  //             <p\n  //               href='http://localhost:3000/auth/facebook'\n  //               style={{\n  //                 position: 'absolute',\n  //                 padding: '1px 10px',\n  //                 lineHeight: '25px',\n  //                 borderRadius: '50%',\n  //                 backgroundColor: 'white',\n  //                 color: 'black',\n  //                 bottom: '3%',\n  //                 left: '1%',\n  //                 textDecoration: 'none',\n  //                 color: '#4267b2'\n  //               }}\n  //             >\n  //               ?\n  //               </p>\n  //           </div>\n  //           {hint && <Direction off={(val) => setHint(val)} />}\n  //           <Clock />\n  //         </React.Fragment>\n  //       ))\n  //     }\n  //   </ReactMapGL>\n  // );\n}; // Mapbox.propTypes = {\n//   userLogin: PropTypes.func.isRequired,\n//   userLogout: PropTypes.func.isRequired,\n//   user_info: PropTypes.object,\n//   // newPost: PropTypes.object\n// };\n// const mapStateToProps = state => ({\n//   user_info: state.data.user,\n//   message: state.data.message\n// });\n// export default connect(mapStateToProps, { userLogin, userLogout })(Mapbox);\n\n\nexport default Mapbox;","map":{"version":3,"sources":["/Users/apple/Dropbox/My Mac (zaytsev.local)/Documents/mapbox/src/Mapbox.js"],"names":["React","useState","useEffect","useRef","useCallback","ReactMapGL","Marker","Popup","showAuthWindow","BrowserRouter","Router","Switch","Route","Link","useParams","ImageView","AddBox","User","Processing","Direction","Clock","PropTypes","connect","userLogin","userLogout","Mapbox","props","text","setText","info","setInfo","getInfo","i","width","height","fontSize","marginTop","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,WAA7C,QAAgE,OAAhE;AACA,OAAOC,UAAP,IAAqBC,MAArB,EAA6BC,KAA7B,QAA0C,cAA1C;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,SALF,QAMO,kBANP;AAOA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,uBAAtC;;AAOA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB3B,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAAC4B,IAAD,EAAQC,OAAR,IAAmB7B,QAAQ,CAAC,CAAD,CAAjC;AACA,QAAM8B,OAAO,GAAE3B,WAAW,CAAC,MAAM;AAC/B0B,IAAAA,OAAO,CAACE,CAAC,IAAIA,CAAC,GAAG,CAAV,CAAP;AACD,GAFyB,EAExB,CAACF,OAAD,CAFwB,CAA1B;AAGA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAC2B,IAAA,KAAK,EAAE;AACHG,MAAAA,KAAK,EAAE,KADJ;AAEHC,MAAAA,MAAM,EAAE,MAFL;AAGHC,MAAAA,QAAQ,EAAE,MAHP;AAIHC,MAAAA,SAAS,EAAE;AAJR,KADlC;AAQ2B,IAAA,WAAW,EAAC,0BARvC;AAS2B,IAAA,IAAI,EAAC,MAThC;AAU2B,IAAA,IAAI,EAAC,GAVhC;AAW2B,IAAA,KAAK,EAAET,IAXlC;AAY2B,IAAA,QAAQ,EAAGU,CAAD,IAAOT,OAAO,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAZnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,eAe0B,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAER,OAAjB;AAA0B,IAAA,GAAG,EAAEF,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAf1B,CADF,CAN0B,CAyBxeAAeJ,MAAf","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl';\nimport { showAuthWindow } from './actions/userActions'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams\n} from \"react-router-dom\";\nimport ImageView from './components/ImageView';\nimport AddBox from './components/AddBox'\nimport User from './components/User'\nimport Processing from './components/Processing'\nimport Direction from './components/Direction'\nimport Clock from './components/Clock'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { userLogin, userLogout } from './actions/userActions';\n\n\n\n\n\n\nconst Mapbox = (props) => {\nconst [text, setText] = useState(\"\")\nconst [info , setInfo] = useState(0)\nconst getInfo= useCallback(() => {\n  setInfo(i => i + 1)\n},[setInfo])\nreturn( \n  <div>\n     <textarea\n                                style={{\n                                    width: '95%',\n                                    height: '35px',\n                                    fontSize: '14px',\n                                    marginTop: '5px'\n\n                                }}\n                                placeholder=\"enter some your review..\"\n                                type=\"text\"\n                                rows=\"5\"\n                                value={text}\n                                onChange={(e) => setText(e.target.value)}\n                            />\n                            <ImageView info={getInfo} val={info} />\n  </div>\n)\n  // let { id } = useParams()\n  // const [logEntries, setLogEntries] = useState([]);\n  // const [showPopup, setShowPopup] = useState({});\n  // const [isShown, setShow] = useState(id ? parseInt(id) : 0)\n  // const [isAdd, setAdd] = useState(false)\n  // const [point, setPoint] = useState(false)\n  // const [pos, setPos] = useState({})\n  // const [user, setUser] = useState(false)\n  // const [load, setLoad] = useState(false)\n  // const [logged, setLogged] = useState({})\n  // const [hint, setHint] = useState(false)\n\n\n  // const [viewport, setViewport] = useState({\n  //   width: '100vw',\n  //   height: '100vh',\n  //   latitude: 10.7781128,\n  //   longitude: 106.65325,\n  //   zoom: 12\n  // });\n\n  // const getLocation = () => {\n  //   if (navigator.geolocation) {\n  //     navigator.geolocation.getCurrentPosition(showPosition);\n  //   } else {\n  //     alert(\"Geolocation is not supported by this browser.\")\n  //   }\n  // }\n\n  // const showPosition = (position) => {\n  //   setViewport({\n  //     width: '100vw',\n  //     height: '100vh',\n  //     latitude: position.coords.latitude,\n  //     longitude: position.coords.longitude,\n  //     zoom: 12\n  //   })\n  // }\n\n  // const getUser = () => {\n  //   console.log(\"in getUser()\");\n  //   fetch(\"http://localhost:3000/auth/login/success\", {\n  //     method: \"GET\",\n  //     credentials: \"include\",\n  //     headers: {\n  //       Accept: \"application/json\",\n  //       \"Content-Type\": \"application/json\",\n  //       \"Access-Control-Allow-Credentials\": true\n  //     }\n  //   })\n  //     .then(response => {\n  //       console.log(\"in then1\");\n\n  //       getEntries()\n  //       if (response.status === 200) return response.json();\n  //       throw new Error(\"failed to authenticate user\");\n  //     })\n  //     .then(responseJson => {\n  //       setLogged(responseJson.user)\n  //       setUser(true)\n\n  //     })\n  //     .catch(error => {\n  //       setLogged(false)\n\n  //     });\n\n  // }\n\n  // const getEntries = async () => {\n  //   const response = await fetch('http://localhost:3000/api/logs')\n  //   const result = await response.json()\n  //   // setLogEntries(result)\n  //   console.log(result);\n  //   setLogEntries(result);\n  //   setLoad(true)\n  //   //setUser(result)\n\n  // };\n\n\n\n\n\n\n  // useEffect(() => {\n  //   if (window.location.hash === \"#_=_\") {\n  //     window.history.replaceState\n  //       ? window.history.replaceState(null, null, window.location.href.split(\"#\")[0])\n  //       : window.location.hash = \"\";\n  //   }\n\n  //   // getUser()\n  //   props.userLogin()\n  //   getEntries()\n  //   setUser(true)\n  //   // console.log(props.user_info);\n  // }, []);\n\n  // const onClick = (e) => {\n  //   const newVewport = {\n  //     ...viewport,\n  //     latitude: e.lngLat[1],\n  //     longitude: e.lngLat[0]\n  //   };\n  //   setPos({ lng: e.lngLat[0], lat: e.lngLat[1] })\n  //   console.log(isAdd);\n  //   if (isAdd) setPoint(true)\n\n  //   setViewport(newVewport);\n  // };\n\n  // const onDblClick = e => {\n  //   console.log('A click event has occurred at ' + e.lngLat[0]);\n  // };\n\n  // const PlusIcon = ({ handleClick, value }) => {\n\n  //   const divStyle = {\n  //     position: 'absolute',\n  //     margin: '15px 15px',\n  //     zIndex: '500',\n\n  //   }\n  //   const divStyle1 = {\n  //     position: 'absolute',\n  //     margin: '10px 15px',\n  //     zIndex: '500',\n  //     animation: 'App-logo-spin 0s',\n  //     animationFillMode: 'forwards',\n  //   }\n  //   return (\n  //     <div style={value ? divStyle1 : divStyle} onClick={() => handleClick(!value)}>\n  //       <svg\n  //         className=\"marker white\"\n  //         style={{\n  //           height: `${3 * 12}px`,\n  //           width: `${3 * 12}px`,\n  //         }}\n  //         version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\">\n  //         <g>\n  //           <g>\n  //             <path style={{ fill: 'white' }} d=\"m272 184c-4.417969 0-8-3.582031-8-8v-176h-80v176c0 4.417969-3.582031 8-8 8h-176v80h176c4.417969 0 8 3.582031 8 8v176h80v-176c0-4.417969 3.582031-8 8-8h176v-80zm0 0\" />\n  //           </g>\n  //         </g>\n  //       </svg>\n  //     </div>\n  //   )\n  // }\n  // const Point = ({ pos }) => {\n\n  //   return (\n  //     <div\n  //       style={{\n  //         position: 'absolute',\n  //         padding: '2px 7px',\n  //         height: '15px',\n  //         lineHeight: '15px',\n  //         borderRadius: '3px',\n  //         backgroundColor: 'white',\n  //         color: 'black',\n  //         top: '2%',\n  //         left: '5%',\n\n  //       }}>\n\n  //       {pos.lng.toFixed(6)} - {pos.lat.toFixed(6)}\n  //     </div>\n  //   )\n  // }\n\n  // return (\n  //   <ReactMapGL\n\n  //     mapStyle=\"mapbox://styles/thecjreynolds/ck117fnjy0ff61cnsclwimyay\"\n\n  //     mapboxApiAccessToken={'pk.eyJ1IjoiemF5dHNldjUiLCJhIjoiY2tjaWk4cnc2MGtiMDJxazJwMGllOThlNyJ9.HciILC1tn3zdsXCuvzdRog'}\n  //     onViewportChange={setViewport}\n  //     doubleClickZoom={false}\n  //     onDblClick={onClick}\n  //     scrollZoom={isShown ? false : true}\n  //     onClick={(e) => onDblClick(e)}\n  //     {...viewport}\n  //   >\n\n  //     <>\n  //       <PlusIcon handleClick={(val) => setAdd(val)} value={isAdd} />\n  //       {\n  //         isAdd && <AddBox reload={() => getEntries()} logged={Object.keys(props.user_info).length > 0 ? true : false} name={props.user_info.displayName} />\n  //       }\n\n  //     </>\n  //     <>\n  //       {\n  //         point && <Point pos={pos} />\n  //       }\n  //     </>\n\n  //     {\n  //       !load && <Processing />\n  //     }\n  //     {\n  //       logEntries.map(entry => (\n  //         <React.Fragment key={entry.id}>\n  //           <Marker\n  //             latitude={entry.latitude}\n  //             longitude={entry.longitude}\n  //           >\n  //             <div\n\n  //               onClick={() => setShowPopup(entry.id)}\n  //               style={{\n\n  //                 cursor: 'pointer'\n  //               }}\n  //             >\n  //               <svg\n  //                 className=\"marker white\"\n  //                 style={{\n  //                   height: `${3 * viewport.zoom}px`,\n  //                   width: `${3 * viewport.zoom}px`,\n  //                   cursor: 'pointer'\n  //                 }}\n  //                 version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\">\n  //                 <g>\n  //                   <g>\n  //                     <path style={{ fill: 'white' }} d=\"M184.08,0c-74.992,0-136,61.008-136,136c0,24.688,11.072,51.24,11.536,52.36c3.576,8.488,10.632,21.672,15.72,29.4\n  //                       l93.248,141.288c3.816,5.792,9.464,9.112,15.496,9.112s11.68-3.32,15.496-9.104l93.256-141.296\n  //                       c5.096-7.728,12.144-20.912,15.72-29.4c0.464-1.112,11.528-27.664,11.528-52.36C320.08,61.008,259.072,0,184.08,0z\n  //                       M293.8,182.152c-3.192,7.608-9.76,19.872-14.328,26.8l-93.256,141.296c-1.84,2.792-2.424,2.792-4.264,0L88.696,208.952\n  //                       c-4.568-6.928-11.136-19.2-14.328-26.808C74.232,181.816,64.08,157.376,64.08,136c0-66.168,53.832-120,120-120\n  //                       c66.168,0,120,53.832,120,120C304.08,157.408,293.904,181.912,293.8,182.152z\"/>\n  //                     <path style={{ fill: 'white' }} d=\"M184.08,64.008c-39.704,0-72,32.304-72,72c0,39.696,32.296,72,72,72c39.704,0,72-32.304,72-72\n  //                       C256.08,96.312,223.784,64.008,184.08,64.008z M184.08,192.008c-30.872,0-56-25.12-56-56s25.128-56,56-56s56,25.12,56,56\n  //                       S214.952,192.008,184.08,192.008z\"/>\n  //                   </g>\n  //                 </g>\n  //               </svg>\n  //             </div>\n  //           </Marker>\n  //           {\n  //             showPopup == entry.id ? (\n  //               <Popup\n  //                 className=\"mu-popup\"\n  //                 latitude={entry.latitude}\n  //                 longitude={entry.longitude}\n  //                 closeButton={true}\n  //                 closeOnClick={false}\n  //                 dynamicPosition={true}\n  //                 onClose={() => setShowPopup({})}\n  //                 anchor=\"top\" >\n  //                 <div className=\"asdsa-apopup\" style={{ width: '210px', fontSize: '12px', zIndex: '99', position: 'relative', zIndex: '300' }}>\n  //                   <h2>{entry.title}</h2>\n  //                   <p><strong style={{ fontSize: '15px' }}>{entry.comments}</strong></p>\n  //                   <p><strong>Author</strong> - {entry.author}</p>\n  //                   <p><strong>Visited on:</strong> {new Date(entry.visitDate).toLocaleDateString()}</p>\n  //                   {\n  //                     entry.image &&\n  //                     <Router>\n  //                       <Link to={`/log/${entry.id}`}>\n\n  //                         <p onClick={() => setShow(entry.id)}><img\n  //                           src={entry.image}\n  //                           alt={entry.title}\n  //                           width='210px' height='100px'\n  //                           title=\"Zoom in\"\n  //                         />\n  //                         </p>\n  //                       </Link>\n  //                     </Router>\n  //                   }\n  //                   {entry.image &&\n  //                     <Router>\n  //                       <Link to={`${entry.id}`}>\n  //                       </Link>\n  //                     </Router>\n\n  //                   }\n  //                 </div>\n  //               </Popup>\n  //             ) : null\n  //           }\n  //           {\n  //             isShown == entry.id ? (\n  //               <ImageView\n  //                 src={entry.image}\n  //                 id={entry.id}\n  //                 uid={props.user_info.id || ''}\n  //                 name={props.user_info.displayName || ''}\n  //                 log={entry}\n  //                 offShow={(val) => setShow(val)}\n  //                 url={Object.keys(props.user_info).length > 0 ? props.user_info.photos[0].value : ''} />\n  //             ) : null\n  //           }\n  //           { Object.keys(props.user_info).length > 0 ? <User url={props.user_info.photos[0].value} userName={props.user_info.displayName} /> :\n  //             <div className=\"login\">\n  //               < div\n  //                 href='http://localhost:3000/auth/facebook'\n  //                 style={{\n  //                   position: 'absolute',\n  //                   padding: '5px 10px',\n  //                   lineHeight: '25px',\n  //                   borderRadius: '3px',\n  //                   backgroundColor: 'white',\n  //                   color: 'black',\n  //                   bottom: '5%',\n  //                   left: '5%',\n  //                   textDecoration: 'none',\n  //                   color: '#4267b2',\n  //                   fontWeight: '700'\n\n  //                 }}\n  //                 onClick={() => {\n  //                   showAuthWindow({\n  //                     path: \"http://localhost:3000/auth/facebook\",\n  //                     callback: function () {\n\n  //                       window.location.reload()\n  //                     }\n  //                   })\n  //                 }}\n\n  //               >Login with facebook</div>\n  //             </div>\n  //           }\n  //           <div onClick={() => setHint(true)} >\n  //             <p\n  //               href='http://localhost:3000/auth/facebook'\n  //               style={{\n  //                 position: 'absolute',\n  //                 padding: '1px 10px',\n\n  //                 lineHeight: '25px',\n  //                 borderRadius: '50%',\n  //                 backgroundColor: 'white',\n  //                 color: 'black',\n  //                 bottom: '3%',\n  //                 left: '1%',\n  //                 textDecoration: 'none',\n  //                 color: '#4267b2'\n  //               }}\n  //             >\n  //               ?\n  //               </p>\n  //           </div>\n  //           {hint && <Direction off={(val) => setHint(val)} />}\n  //           <Clock />\n  //         </React.Fragment>\n  //       ))\n  //     }\n\n  //   </ReactMapGL>\n\n  // );\n}\n\n// Mapbox.propTypes = {\n//   userLogin: PropTypes.func.isRequired,\n//   userLogout: PropTypes.func.isRequired,\n//   user_info: PropTypes.object,\n//   // newPost: PropTypes.object\n// };\n\n// const mapStateToProps = state => ({\n//   user_info: state.data.user,\n//   message: state.data.message\n// });\n// export default connect(mapStateToProps, { userLogin, userLogout })(Mapbox);\nexport default Mapbox;"]},"metadata":{},"sourceType":"module"}