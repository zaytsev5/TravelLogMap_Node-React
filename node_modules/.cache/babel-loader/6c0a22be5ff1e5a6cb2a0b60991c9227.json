{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/mapbox/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl';\nimport ImageView from './components/ImageView';\n\nconst Mapbox = () => {\n  const [logEntries, setLogEntries] = useState([]);\n  const [showPopup, setShowPopup] = useState({});\n  const [isShown, setShow] = useState(0); // const [addEntryLocation, setAddEntryLocation] = useState(null);\n\n  const [curPos, setCur] = useState({});\n  const [viewport, setViewport] = useState({\n    width: '100vw',\n    height: '100vh',\n    latitude: 10.7781128,\n    longitude: 106.65325,\n    zoom: 12\n  });\n\n  const getEntries = async () => {\n    const response = await fetch('http://localhost:1337/api/logs');\n    const logEntries = await response.json();\n    console.log(logEntries); // const logEntries = [\n    //   {\n    //     id:1,\n    //     latitude:10.7781128,\n    //     longitude:106.6532558,\n    //     title: 'Bach Khoa University',\n    //     comments: 'This is the best university of Vietnam',\n    //     visitDate: '2020-06-19',\n    //     author:'nguyenvanhai',\n    //     image: 'https://wikitintuc.com/wp-content/uploads/2018/10/bachkhoa500-1540897389-2535-1540897584_500x300.jpg'\n    //   },\n    //   {\n    //     id:2,\n    //     latitude:10.8478,\n    //     longitude:106.7839,\n    //     title: 'Post and Telecommunications Institute of Technology',\n    //     comments: 'This is the best university of Vietnam',\n    //     visitDate: '2020-06-19',\n    //     author:'trandinhtam',\n    //     image:'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTf4jwGXCj45_mlRIyhJxtmGrBko2mMd8IDhQ&usqp=CAU'\n    //   }\n    // ]\n\n    setLogEntries(logEntries);\n  };\n\n  const getUserPosition = async () => {\n    var getPosition = function (options) {\n      return new Promise(function (resolve, reject) {\n        navigator.geolocation.getCurrentPosition(resolve, reject, options);\n      });\n    };\n\n    const position = await getPosition();\n    const logEntries = [{\n      id: 1,\n      latitude: position.coords.latitude,\n      longitude: position.coords.longitude,\n      title: 'Bach Khoa University',\n      comments: 'This is the best university of Vietnam',\n      image: ' http://localhost:5000/img2.png'\n    }];\n    setLogEntries(logEntries);\n    console.log(logEntries);\n  };\n\n  useEffect(() => {\n    getEntries();\n  }, []); // const showAddMarkerPopup = (event) => {\n  //   const [ longitude, latitude ] = event.lngLat;\n  //   setAddEntryLocation({\n  //     latitude,\n  //     longitude,\n  //   });\n  // };\n\n  return /*#__PURE__*/React.createElement(ReactMapGL, Object.assign({}, viewport, {\n    mapStyle: \"mapbox://styles/thecjreynolds/ck117fnjy0ff61cnsclwimyay\",\n    mapboxApiAccessToken: 'pk.eyJ1IjoiemF5dHNldjUiLCJhIjoiY2tjaWk4cnc2MGtiMDJxazJwMGllOThlNyJ9.HciILC1tn3zdsXCuvzdRog',\n    onViewportChange: setViewport // onDblClick={showAddMarkerPopup}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }), logEntries.map(entry => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: entry.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, isShown == entry.id ? /*#__PURE__*/React.createElement(ImageView, {\n    src: entry.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 38\n    }\n  }) : null, /*#__PURE__*/React.createElement(Marker, {\n    latitude: entry.latitude,\n    longitude: entry.longitude,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    // onClick = {() =>{\n    //   console.log(\"You have clicked...\");\n    // }}\n    onClick: () => setShowPopup(entry.id),\n    style: {\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    className: \"marker white\",\n    style: {\n      height: `${3 * viewport.zoom}px`,\n      width: `${3 * viewport.zoom}px`,\n      color: 'white'\n    },\n    version: \"1.1\",\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: '#FD003A'\n    },\n    d: \"M256,0C156.698,0,76,80.7,76,180c0,33.6,9.302,66.301,27.001,94.501l140.797,230.414 c2.402,3.9,6.002,6.301,10.203,6.901c5.698,0.899,12.001-1.5,15.3-7.2l141.2-232.516C427.299,244.501,436,212.401,436,180 C436,80.7,355.302,0,256,0z M256,270c-50.398,0-90-40.8-90-90c0-49.501,40.499-90,90-90s90,40.499,90,90 C346,228.9,306.999,270,256,270z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: '#E50027'\n    },\n    d: \"M256,0v90c49.501,0,90,40.499,90,90c0,48.9-39.001,90-90,90v241.991 c5.119,0.119,10.383-2.335,13.3-7.375L410.5,272.1c16.799-27.599,25.5-59.699,25.5-92.1C436,80.7,355.302,0,256,0z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  })))))), showPopup == entry.id ? /*#__PURE__*/React.createElement(Popup, {\n    latitude: entry.latitude,\n    longitude: entry.longitude,\n    closeButton: true,\n    closeOnClick: false,\n    dynamicPosition: true,\n    onClose: () => setShowPopup({}),\n    anchor: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup\",\n    style: {\n      width: '210px',\n      fontSize: '12px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, entry.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, entry.comments), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, \"Author - \", entry.author), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }, \"Visited on: \", new Date(entry.visitDate).toLocaleDateString()), entry.image && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    onClick: () => setShow(1),\n    src: entry.image,\n    alt: entry.title,\n    width: \"200px\",\n    height: \"90px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 26\n    }\n  })))) : null)));\n};\n\nexport default Mapbox;","map":{"version":3,"sources":["/Users/apple/Desktop/mapbox/src/App.js"],"names":["React","useState","useEffect","ReactMapGL","Marker","Popup","ImageView","Mapbox","logEntries","setLogEntries","showPopup","setShowPopup","isShown","setShow","curPos","setCur","viewport","setViewport","width","height","latitude","longitude","zoom","getEntries","response","fetch","json","console","log","getUserPosition","getPosition","options","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","id","coords","title","comments","image","map","entry","cursor","color","fill","fontSize","author","Date","visitDate","toLocaleDateString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl';\nimport ImageView from './components/ImageView';\n\n\n\nconst Mapbox = () => {\n  const [logEntries, setLogEntries] = useState([]);\n  const [showPopup, setShowPopup] = useState({});\n  const [isShown , setShow] = useState(0)\n  \n  // const [addEntryLocation, setAddEntryLocation] = useState(null);\n  const [curPos, setCur] = useState({})\n  const [viewport, setViewport] = useState({\n    width: '100vw',\n    height: '100vh',\n    latitude: 10.7781128,\n    longitude: 106.65325,\n    zoom: 12\n  });\n\n  \n  const getEntries = async () => {\n    const response = await fetch('http://localhost:1337/api/logs')\n    const logEntries = await response.json()\n    console.log(logEntries);\n    // const logEntries = [\n    //   {\n    //     id:1,\n    //     latitude:10.7781128,\n    //     longitude:106.6532558,\n    //     title: 'Bach Khoa University',\n    //     comments: 'This is the best university of Vietnam',\n    //     visitDate: '2020-06-19',\n    //     author:'nguyenvanhai',\n    //     image: 'https://wikitintuc.com/wp-content/uploads/2018/10/bachkhoa500-1540897389-2535-1540897584_500x300.jpg'\n    //   },\n    //   {\n    //     id:2,\n    //     latitude:10.8478,\n    //     longitude:106.7839,\n    //     title: 'Post and Telecommunications Institute of Technology',\n    //     comments: 'This is the best university of Vietnam',\n    //     visitDate: '2020-06-19',\n    //     author:'trandinhtam',\n    //     image:'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTf4jwGXCj45_mlRIyhJxtmGrBko2mMd8IDhQ&usqp=CAU'\n    //   }\n    // ]\n    setLogEntries(logEntries);\n  };\n\n  const getUserPosition = async() =>{\n    var getPosition = function (options) {\n      return new Promise(function (resolve, reject) {\n        navigator.geolocation.getCurrentPosition(resolve, reject, options);\n      });\n    }\n    const position = await getPosition();\n    const logEntries = [\n      {\n        id:1,\n        latitude:position.coords.latitude,\n        longitude:position.coords.longitude,\n        title: 'Bach Khoa University',\n        comments: 'This is the best university of Vietnam',\n        image: ' http://localhost:5000/img2.png'\n      }\n    ]\n    setLogEntries(logEntries);\n    console.log(logEntries);\n  }\n\n  useEffect( () => {\n   getEntries()\n  }, []);\n\n  // const showAddMarkerPopup = (event) => {\n  //   const [ longitude, latitude ] = event.lngLat;\n  //   setAddEntryLocation({\n  //     latitude,\n  //     longitude,\n  //   });\n  // };\n\n  return (\n    <ReactMapGL\n      {...viewport}\n      mapStyle=\"mapbox://styles/thecjreynolds/ck117fnjy0ff61cnsclwimyay\"\n      mapboxApiAccessToken={'pk.eyJ1IjoiemF5dHNldjUiLCJhIjoiY2tjaWk4cnc2MGtiMDJxazJwMGllOThlNyJ9.HciILC1tn3zdsXCuvzdRog'}\n      onViewportChange={setViewport}\n     // onDblClick={showAddMarkerPopup}\n    >\n      {\n        logEntries.map(entry => (\n          <React.Fragment key={entry.id}>\n            {\n              isShown == entry.id ? (<ImageView src={entry.image} />) : null\n            }\n            <Marker\n              latitude={entry.latitude}\n              longitude={entry.longitude}\n            >\n              <div\n                // onClick = {() =>{\n                //   console.log(\"You have clicked...\");\n                // }}\n                onClick={() => setShowPopup(entry.id)}\n                style={{\n                  \n                  cursor:'pointer'\n                }}\n              >\n                <svg\n                  className=\"marker white\"\n                  style={{\n                    height: `${3 * viewport.zoom}px`,\n                    width: `${3 * viewport.zoom}px`,\n                    color:'white'\n                  }}\n                  version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\">\n                  <g>\n                    <g>\n                    <path style={{fill:'#FD003A'}} d=\"M256,0C156.698,0,76,80.7,76,180c0,33.6,9.302,66.301,27.001,94.501l140.797,230.414\n                      c2.402,3.9,6.002,6.301,10.203,6.901c5.698,0.899,12.001-1.5,15.3-7.2l141.2-232.516C427.299,244.501,436,212.401,436,180\n                      C436,80.7,355.302,0,256,0z M256,270c-50.398,0-90-40.8-90-90c0-49.501,40.499-90,90-90s90,40.499,90,90\n                      C346,228.9,306.999,270,256,270z\"/>\n                    <path style={{fill:'#E50027'}} d=\"M256,0v90c49.501,0,90,40.499,90,90c0,48.9-39.001,90-90,90v241.991\n                      c5.119,0.119,10.383-2.335,13.3-7.375L410.5,272.1c16.799-27.599,25.5-59.699,25.5-92.1C436,80.7,355.302,0,256,0z\"/>\n                    </g>\n                  </g>\n                </svg>\n              </div>\n            </Marker>\n            {\n              showPopup == entry.id ? (\n                <Popup\n                 \n                  latitude={entry.latitude}\n                  longitude={entry.longitude}\n                  closeButton={true}\n                  closeOnClick={false}\n                  dynamicPosition={true}\n                  onClose={() => setShowPopup({})}\n                  anchor=\"top\" >\n                  <div className=\"popup\" style={{width:'210px',fontSize:'12px'}}>\n                    <h3>{entry.title}</h3>\n                    <p>{entry.comments}</p>\n                    <p>Author - {entry.author}</p>\n                    <small>Visited on: {new Date(entry.visitDate).toLocaleDateString()}</small>\n                    {\n                      entry.image && \n                      <p><img \n                        onClick={()=>setShow(1)}\n                        src={entry.image} \n                        alt={entry.title} \n                        width='200px' height='90px' />\n                      </p>\n                    }\n                  </div>\n                </Popup>\n              ) : null\n            }\n          </React.Fragment>\n        ))\n      }\n      {/* {\n        addEntryLocation ? (\n          <>\n          <Marker\n            latitude={addEntryLocation.latitude}\n            longitude={addEntryLocation.longitude}\n          >\n            <div>\n              <svg\n                className=\"marker red\"\n                style={{\n                  height: `${6 * viewport.zoom}px`,\n                  width: `${6 * viewport.zoom}px`,\n                }}\n                version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\">\n                <g>\n                  <g>\n                    <path d=\"M256,0C153.755,0,70.573,83.182,70.573,185.426c0,126.888,165.939,313.167,173.004,321.035\n                      c6.636,7.391,18.222,7.378,24.846,0c7.065-7.868,173.004-194.147,173.004-321.035C441.425,83.182,358.244,0,256,0z M256,278.719\n                      c-51.442,0-93.292-41.851-93.292-93.293S204.559,92.134,256,92.134s93.291,41.851,93.291,93.293S307.441,278.719,256,278.719z\"/>\n                  </g>\n                </g>\n              </svg>\n            </div>\n          </Marker>\n          <Popup\n            latitude={addEntryLocation.latitude}\n            longitude={addEntryLocation.longitude}\n            closeButton={true}\n            closeOnClick={false}\n            dynamicPosition={true}\n            onClose={() => setAddEntryLocation(null)}\n            anchor=\"top\" >\n            <div className=\"popup\">\n              <LogEntryForm onClose={() => {\n                setAddEntryLocation(null);\n                getEntries();\n              }} location={addEntryLocation} />\n            </div>\n          </Popup>\n          </>\n        ) : null\n      } */}\n    </ReactMapGL>\n  );\n}\n\nexport default Mapbox;"]},"metadata":{},"sourceType":"module"}