{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/mapbox/src/components/ImageView.js\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport Loading from './Loading';\nimport loveheart from '../images/loveheart.png';\n\nconst ImageView = ({\n  src,\n  offShow,\n  log,\n  id,\n  uid,\n  name\n}) => {\n  const [comments, setComment] = useState([]);\n  const [loaded, setLoad] = useState(false);\n  const [text, setText] = useState('');\n  const [userId, setUid] = useState(null);\n  let index = 0;\n\n  const getComments = async () => {\n    const response = await fetch(`http://localhost:3000/info/${uid}`);\n    const result = await res.json();\n    setUid(result._id);\n    const res = await fetch(`http://localhost:3000/api/${id}/cmts`);\n    const comments = await res.json();\n    setComment(comments);\n    setLoad(true);\n  };\n\n  const handleChange = e => {\n    setText(e.target.value); //  console.log(e.target.value);\n  };\n\n  const handleClick = async () => {\n    console.log(id);\n    fetch('http://localhost:3000/auto', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"lid\": id,\n        \"uid\": userId,\n        \"title\": text,\n        \"body\": \"thisisbody\"\n      })\n    }).then(res => res.json()).then(result => {\n      if (result.done) {\n        setLoad(false);\n        const body = \"nothing\";\n        const lid = id;\n        let uid = {\n          name: name\n        };\n        const title = text;\n        const stringified = JSON.stringify({\n          lid,\n          uid,\n          title,\n          body\n        });\n        comments.push(JSON.parse(stringified));\n        setLoad(true); //getComments();\n      } else {\n        alert(\"An error occured!\");\n      }\n    }); //  console.log(index);\n  };\n\n  const ts = () => {\n    console.log(\"hihi\");\n  };\n\n  useEffect(() => {\n    getComments();\n    console.log(\"hic hiic\"); // setComment(cmt)\n  }, []);\n  const styleDiv = {\n    width: '100%',\n    height: '100%',\n    zIndex: '100',\n    backgroundColor: 'rgb(0,0,0)',\n\n    /* Fallback color */\n    backgroundColor: 'rgba(0,0,0,0.4)',\n\n    /* Black w/ opacity */\n    position: 'relative'\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: styleDiv,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '400px',\n      height: '370px',\n      position: 'absolute',\n      marginLeft: '30%',\n      marginTop: '100px',\n      transform: 'translate(-50%,0)',\n      opacity: '1'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: src,\n    width: 700,\n    height: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '350px',\n      height: '570px',\n      position: 'absolute',\n      marginLeft: '65%',\n      marginTop: '50px',\n      // transform:'translate(-50%,0)',\n      opacity: '1',\n      borderRadius: '4px',\n      backgroundColor: '#FFF',\n      boxShadow: '0 1px 2px rgba(0,0,0,.1)',\n      padding: '15px 20px',\n      zIndex: '1000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      right: '10px',\n      top: '0px',\n      // fontSize:'18px',\n      padding: '5px 5px',\n      cursor: 'pointer'\n    },\n    onClick: () => offShow(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    height: \"12px\",\n    viewBox: \"0 0 365.696 365.696\",\n    width: \"12px\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m243.1875 182.859375 113.132812-113.132813c12.5-12.5 12.5-32.765624 0-45.246093l-15.082031-15.082031c-12.503906-12.503907-32.769531-12.503907-45.25 0l-113.128906 113.128906-113.132813-113.152344c-12.5-12.5-32.765624-12.5-45.246093 0l-15.105469 15.082031c-12.5 12.503907-12.5 32.769531 0 45.25l113.152344 113.152344-113.128906 113.128906c-12.503907 12.503907-12.503907 32.769531 0 45.25l15.082031 15.082031c12.5 12.5 32.765625 12.5 45.246093 0l113.132813-113.132812 113.128906 113.132812c12.503907 12.5 32.769531 12.5 45.25 0l15.082031-15.082031c12.5-12.503906 12.5-32.769531 0-45.25zm0 0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 117\n    }\n  }))), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, log.title.toUpperCase()), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      marginTop: '0',\n      marginBottom: '0',\n      marginLeft: '50%',\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, \"Author: \", log.author), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, \"Comments(\", comments.length, \")\"), loaded ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comments\",\n    style: {\n      marginLeft: '15px',\n      height: '400px',\n      overflow: 'scroll'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 26\n    }\n  }, comments.map((cmt, index) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"cmt-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 52\n    }\n  }, cmt.uid.name, \"-\"), cmt.title))), /*#__PURE__*/React.createElement(\"textarea\", {\n    style: {\n      width: '90%',\n      height: '50px'\n    },\n    placeholder: \"enter some your review..\",\n    type: \"text\",\n    rows: \"5\",\n    onChange: e => handleChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      backgroundColor: 'white',\n      border: '1px solid black',\n      borderRadius: '2px'\n    },\n    onClick: () => handleClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }, \"Add more\")) : /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 26\n    }\n  })));\n};\n\nexport default ImageView;","map":{"version":3,"sources":["/Users/apple/Desktop/mapbox/src/components/ImageView.js"],"names":["React","useRef","useState","useEffect","Loading","loveheart","ImageView","src","offShow","log","id","uid","name","comments","setComment","loaded","setLoad","text","setText","userId","setUid","index","getComments","response","fetch","result","res","json","_id","handleChange","e","target","value","handleClick","console","method","headers","body","JSON","stringify","then","done","lid","title","stringified","push","parse","alert","ts","styleDiv","width","height","zIndex","backgroundColor","position","marginLeft","marginTop","transform","opacity","borderRadius","boxShadow","padding","right","top","cursor","toUpperCase","marginBottom","fontWeight","author","margin","length","overflow","map","cmt","border"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport Loading from './Loading'\nimport loveheart from '../images/loveheart.png'\n\nconst ImageView  = ({src,offShow,log,id,uid,name}) =>{\n    const [comments, setComment] = useState([])\n    const [loaded, setLoad] = useState(false)\n    const [text, setText] = useState('')\n    const [userId, setUid] = useState(null)\n\n    let index = 0;\n    const getComments = async () =>{\n        const response =  await fetch(`http://localhost:3000/info/${uid}`)\n        const result = await res.json();\n        setUid(result._id)\n        const res = await fetch(`http://localhost:3000/api/${id}/cmts`)\n        const comments = await res.json();\n        setComment(comments)\n        setLoad(true)\n    }\n    const handleChange = (e)=> {\n        setText(e.target.value)\n      //  console.log(e.target.value);\n    }\n    const handleClick = async () =>{\n        console.log(id);\n        fetch('http://localhost:3000/auto',{\n            method: 'POST',\n            headers:{\n                'Content-Type' : 'application/json'\n            },\n            body:JSON.stringify({\n                \"lid\":id,\n                \"uid\":userId,\n                \"title\":text,\n                \"body\":\"thisisbody\"\n            })\n        })\n        .then(res => res.json())\n        .then(result =>{\n            if(result.done){\n               setLoad(false)\n                const body = \"nothing\"\n                const lid = id\n                let uid = {\n                    name:name\n                }\n                const title =text;\n                const stringified = JSON.stringify({\n                    lid,uid,title,body\n                })\n                comments.push(JSON.parse(stringified))\n               setLoad(true)\n                //getComments();\n            }else{\n                alert(\"An error occured!\")\n            }\n        })\n      //  console.log(index);\n        \n    }\n    const ts = () =>{\n        console.log(\"hihi\");\n    }\n    useEffect(()=>{\n        getComments();\n        console.log(\"hic hiic\");\n        // setComment(cmt)\n    },[])\n    const styleDiv = {\n        width:'100%',\n        height:'100%',\n        zIndex:'100',\n        backgroundColor: 'rgb(0,0,0)', /* Fallback color */\n        backgroundColor: 'rgba(0,0,0,0.4)', /* Black w/ opacity */\n        position:'relative',\n        \n    }\n    return (\n        <div style={styleDiv} >\n           <div style={{\n               width:'400px',\n               height:'370px',\n               position:'absolute',\n               marginLeft:'30%',\n               marginTop:'100px',\n               transform:'translate(-50%,0)',\n               opacity:'1',\n               \n           }}>\n                <img src={src} width={700} height={500}  />\n           </div>\n           <div\n            style={{\n                width:'350px',\n                height:'570px',\n                position:'absolute',\n                marginLeft:'65%',\n                marginTop:'50px',\n                // transform:'translate(-50%,0)',\n                opacity:'1',\n                borderRadius : '4px',\n                backgroundColor:'#FFF',\n                boxShadow:'0 1px 2px rgba(0,0,0,.1)',\n                padding:'15px 20px',\n                zIndex:'1000'\n\n            }}>\n                <div style={{\n                    position:'absolute',\n                    right:'10px',\n                    top:'0px',\n                    // fontSize:'18px',\n                    padding:'5px 5px',\n                    cursor:'pointer'\n                }}\n                onClick={()=>offShow(false)}\n                >\n                   <svg height=\"12px\" viewBox=\"0 0 365.696 365.696\" width=\"12px\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m243.1875 182.859375 113.132812-113.132813c12.5-12.5 12.5-32.765624 0-45.246093l-15.082031-15.082031c-12.503906-12.503907-32.769531-12.503907-45.25 0l-113.128906 113.128906-113.132813-113.152344c-12.5-12.5-32.765624-12.5-45.246093 0l-15.105469 15.082031c-12.5 12.503907-12.5 32.769531 0 45.25l113.152344 113.152344-113.128906 113.128906c-12.503907 12.503907-12.503907 32.769531 0 45.25l15.082031 15.082031c12.5 12.5 32.765625 12.5 45.246093 0l113.132813-113.132812 113.128906 113.132812c12.503907 12.5 32.769531 12.5 45.25 0l15.082031-15.082031c12.5-12.503906 12.5-32.769531 0-45.25zm0 0\"/></svg>\n                </div>\n                <h3>{log.title.toUpperCase()}</h3>\n                <p\n                    style={{\n                        marginTop:'0',\n                        marginBottom:'0',\n                        marginLeft:'50%',\n                        fontWeight:'bold'\n                    }}\n                >\n                   Author: {log.author}\n                </p>\n                <p\n                    style={{\n                       margin:'0'\n                    }}\n                >\n                   Comments({comments.length})\n                </p>\n               {\n                loaded ? <div className=\"comments\" \n                    style={{\n                        marginLeft:'15px',\n                        height:'400px',\n                        overflow:'scroll'\n                    }}  \n                    >\n                    {\n                        comments.map((cmt,index) =>(\n                            <React.Fragment key={index}>\n                            <p className=\"cmt-row\"><strong>{cmt.uid.name}-</strong>{cmt.title}</p>\n                            </React.Fragment>\n                        ))\n                    }\n                    <textarea \n                            style={{\n                                width:'90%',\n                                height:'50px'\n                            }}\n                            placeholder=\"enter some your review..\"\n                            type=\"text\"\n                            rows=\"5\"\n                            onChange={(e) => handleChange(e)}\n                         />\n                    <button\n                        style={{\n                            backgroundColor:'white',\n                            border:'1px solid black',\n                            borderRadius:'2px'\n                        }}\n                        onClick={()=>handleClick()}\n                    >\n                        Add more\n                    </button>\n                    {/* <span>\n                        <img src={loveheart} width=\"25px\" height=\"25px\" />\n                    </span> */}\n                    {/* <p className=\"cmt-row\"><strong>nguyenvnhai </strong>This is so greate</p>\n                    <p className=\"cmt-row\"><strong>nguyenminhhieu </strong>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy</p>\n                    <p className=\"cmt-row\"><strong>nguyenthanhien </strong>Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>\n                    <p className=\"cmt-row\"><strong>nguyensin </strong>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy</p> */}\n                </div> : <Loading/>\n                }       \n           </div>\n        </div>\n    )\n}\n\nexport default ImageView;"]},"metadata":{},"sourceType":"module"}